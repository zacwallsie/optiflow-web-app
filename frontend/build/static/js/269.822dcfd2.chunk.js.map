{"version":3,"file":"static/js/269.822dcfd2.chunk.js","mappings":"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","sources":["sections/auth/register/RegisterForm.js","pages/auth/Register.js"],"sourcesContent":["import * as Yup from \"yup\"\nimport { useState } from \"react\"\n// form\nimport { useForm } from \"react-hook-form\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\n// @mui\nimport { Stack, IconButton, InputAdornment, Alert } from \"@mui/material\"\nimport { LoadingButton } from \"@mui/lab\"\n// hooks\nimport useAuth from \"../../../hooks/useAuth\"\nimport useIsMountedRef from \"../../../hooks/useIsMountedRef\"\n// components\nimport Iconify from \"../../../components/Iconify\"\nimport { FormProvider, RHFTextField } from \"../../../components/hook-form\"\n\n// ----------------------------------------------------------------------\n\nexport default function RegisterForm() {\n\tconst { register } = useAuth()\n\n\tconst isMountedRef = useIsMountedRef()\n\n\tconst [showPassword, setShowPassword] = useState(false)\n\n\tconst RegisterSchema = Yup.object().shape({\n\t\tuserName: Yup.string().required(\"Name required\"),\n\t\temail: Yup.string().email(\"Email must be a valid email address\").required(\"Email is required\"),\n\t\tpassword: Yup.string().required(\"Password is required\"),\n\t})\n\n\tconst defaultValues = {\n\t\tuserName: \"\",\n\t\tlastName: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t}\n\n\tconst methods = useForm({\n\t\tresolver: yupResolver(RegisterSchema),\n\t\tdefaultValues,\n\t})\n\n\tconst {\n\t\treset,\n\t\tsetError,\n\t\thandleSubmit,\n\t\tformState: { errors, isSubmitting },\n\t} = methods\n\n\tconst onSubmit = async (data) => {\n\t\ttry {\n\t\t\tawait register(data.email, data.password, data.firstName, data.lastName)\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\treset()\n\t\t\tif (isMountedRef.current) {\n\t\t\t\tsetError(\"afterSubmit\", { ...error, message: error.message })\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<Stack spacing={3}>\n\t\t\t\t{!!errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>}\n\t\t\t\t<RHFTextField name=\"userName\" label=\"Full name\" />\n\n\t\t\t\t<RHFTextField name=\"email\" label=\"Email address\" />\n\n\t\t\t\t<RHFTextField\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\ttype={showPassword ? \"text\" : \"password\"}\n\t\t\t\t\tInputProps={{\n\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t<IconButton edge=\"end\" onClick={() => setShowPassword(!showPassword)}>\n\t\t\t\t\t\t\t\t\t<Iconify icon={showPassword ? \"eva:eye-fill\" : \"eva:eye-off-fill\"} />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n\t\t\t\t\tRegister\n\t\t\t\t</LoadingButton>\n\t\t\t</Stack>\n\t\t</FormProvider>\n\t)\n}\n","import { capitalCase } from \"change-case\"\nimport { Link as RouterLink } from \"react-router-dom\"\n// @mui\nimport { styled } from \"@mui/material/styles\"\nimport { Box, Card, Link, Container, Typography, Tooltip } from \"@mui/material\"\n// hooks\nimport useAuth from \"../../hooks/useAuth\"\nimport useResponsive from \"../../hooks/useResponsive\"\n// routes\nimport { PATH_AUTH } from \"../../routes/paths\"\n// components\nimport Page from \"../../components/Page\"\nimport Logo from \"../../components/Logo\"\nimport Image from \"../../components/Image\"\n// sections\nimport { RegisterForm } from \"../../sections/auth/register\"\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(\"div\")(({ theme }) => ({\n\t[theme.breakpoints.up(\"md\")]: {\n\t\tdisplay: \"flex\",\n\t},\n}))\n\nconst SectionStyle = styled(Card)(({ theme }) => ({\n\twidth: \"100%\",\n\tmaxWidth: 464,\n\tdisplay: \"flex\",\n\tflexDirection: \"column\",\n\tjustifyContent: \"center\",\n\tmargin: theme.spacing(2, 0, 2, 2),\n}))\n\nconst ContentStyle = styled(\"div\")(({ theme }) => ({\n\tmaxWidth: 480,\n\tmargin: \"auto\",\n\tminHeight: \"100vh\",\n\tdisplay: \"flex\",\n\tjustifyContent: \"center\",\n\tflexDirection: \"column\",\n\tpadding: theme.spacing(12, 0),\n}))\n\n// ----------------------------------------------------------------------\n\nexport default function Register() {\n\tconst { method } = useAuth()\n\n\tconst smUp = useResponsive(\"up\", \"sm\")\n\n\tconst mdUp = useResponsive(\"up\", \"md\")\n\n\treturn (\n\t\t<Page title=\"Register\">\n\t\t\t<RootStyle>\n\t\t\t\t{mdUp && (\n\t\t\t\t\t<SectionStyle>\n\t\t\t\t\t\t<Typography variant=\"h3\" sx={{ px: 5, mt: 10, mb: 5 }}>\n\t\t\t\t\t\t\tMake managing your Data simple with OptiFlow\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</SectionStyle>\n\t\t\t\t)}\n\n\t\t\t\t<Container>\n\t\t\t\t\t<ContentStyle>\n\t\t\t\t\t\t<Box sx={{ mb: 5, display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t\t<Box sx={{ flexGrow: 1 }}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\t\t\t\t\t\tGet started absolutely free.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography sx={{ color: \"text.secondary\" }}>A data warehouse at your fingertips.</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<RegisterForm />\n\n\t\t\t\t\t\t<Typography variant=\"body2\" align=\"center\" sx={{ color: \"text.primary\", mt: 3 }}>\n\t\t\t\t\t\t\tAlready have an account? {\"\"}\n\t\t\t\t\t\t\t<Link variant=\"subtitle2\" component={RouterLink} to={PATH_AUTH.login}>\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</ContentStyle>\n\t\t\t\t</Container>\n\t\t\t</RootStyle>\n\t\t</Page>\n\t)\n}\n"],"names":["RegisterForm","register","useAuth","isMountedRef","useIsMountedRef","useState","showPassword","setShowPassword","RegisterSchema","Yup","shape","userName","required","email","password","methods","useForm","resolver","yupResolver","defaultValues","lastName","reset","setError","handleSubmit","formState","errors","isSubmitting","onSubmit","data","firstName","console","error","current","message","Stack","spacing","afterSubmit","Alert","severity","name","label","type","InputProps","endAdornment","InputAdornment","position","IconButton","edge","onClick","Iconify","icon","LoadingButton","fullWidth","size","variant","loading","RootStyle","styled","theme","breakpoints","up","display","SectionStyle","Card","width","maxWidth","flexDirection","justifyContent","margin","ContentStyle","minHeight","padding","Register","method","useResponsive","mdUp","Page","title","Typography","sx","px","mt","mb","Container","Box","alignItems","flexGrow","gutterBottom","color","align","Link","component","RouterLink","to","PATH_AUTH"],"sourceRoot":""}